name: Playwright Tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, setup-ci-cd, master]

jobs:
  playwright-test:
    name: "Playwright Tests - Shard ${{ matrix.shard }}"
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard: [1/4, 2/4, 3/4, 4/4]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      # Remove container
      - name: Container Cleanup
        continue-on-error: true
        run: docker rm playwright_test --force
      # Build docker container (-t tag) from file (--file / -f)
      - name: Build Docker image
        run: docker build -t playwright_image --file Dockerfile .
      # Run container with interactive mode (-i) with name (--name)
      # entrypoint (command which will run after runing container --entrypoint)
      # commanfor tagged container and command to run
      - name: Run tests
        run: docker run -i --name playwright_test --entrypoint="npx" playwright_image playwright test --shard ${{matrix.shard}}
      # Copy playwright-report
      - name: Copy test results playwright-report
        run: docker cp playwright_test:./tests/playwright-report playwright-report
      # Copy blob-report
      - name: Copy test results playwright-blob
        run: docker cp playwright_test:./tests/blob-report blob-report

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: blob-report
          path: blob-report
          retention-days: 30
      # Remove container
      - name: Container Cleanup
        continue-on-error: true
        run: docker rm playwright_test --force

  merge-reports:
    if: always()
    needs: [playwright-test]
    runs-on: ubuntu-latest

    outputs:
      timestamp: ${{ steps.timestampid.outputs.timestamp}}

    steps:

      - name: Set a timestamp
        id: timestamp
        run: echo "timestamp=$(data --utc +%Y%m%d_%H%M%SZ)" >> "$GITHUB_OUTPUT"
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci

      - name: Download blob reports
        uses: actions/download-artifact@v3
        with:
          name: blob-report
          path: blob-report

      - name: Merge into HTML report
        run: npx playwright merge-reports --reporter html ./blob-report

      - name: Upload HTML reporter
        uses: actions/upload-artifact@v3
        with:
          name: merged-html-report-${{ steps.timestampid.outputs.timestamp}}
          path: playwright-report
          retention-days: 30

      - name: Push files to github pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./playwright-report
          destination_dir: ${{ steps.timestampid.outputs.timestamp}}

      - name: Write a url summary
        run: echo "### Test results link (wait 20 sec) https://${{github.repository_owner}}.github.io/"
